package com.Student_Library_Management_System.Service;


import com.Student_Library_Management_System.Enums.CardStatus;
import com.Student_Library_Management_System.Models.Card;
import com.Student_Library_Management_System.Models.Student;
import com.Student_Library_Management_System.Repository.StudentRepository;
import com.Student_Library_Management_System.dtos.AuthorEntryDto;
import com.Student_Library_Management_System.dtos.StudentUpdateMobReqDto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    private StudentRepository studentRepository;

    public String createStudent(Student student){
    //Student from the postman has basic attributes which are already se
    // card should be autogenerated when student is created

     Card card = new Card();
     card.setCardStatus(CardStatus.ACTIVATED);
     //responsible for foreign key column in card_table
     card.setStudent(student);
     student.setCard(card);


     //If there was a unidirectional mapping we have to save both of these manually
     //since we are using bidirectional mapping we have to save parent only and child will got automatically saved
     studentRepository.save(student);
     //by cascading effect card will automatically will get save

    return "student saved successfully";
    }

    public String findNameByEmail(String email){
        Student student = studentRepository.findByEmail(email);
        return student.getName();
    }

    public String updateMob(StudentUpdateMobReqDto studentUpdateMobReqDto){
       //first we will try to fetch the old data
       Student ostudent = studentRepository.findById(studentUpdateMobReqDto.getId()).get();
       //we will keep the other properties as it is and will update the mobile
        ostudent.setMobNo(studentUpdateMobReqDto.getMobNo());


        studentRepository.save(ostudent);
        return "Mobile number is updated";
    }
}
